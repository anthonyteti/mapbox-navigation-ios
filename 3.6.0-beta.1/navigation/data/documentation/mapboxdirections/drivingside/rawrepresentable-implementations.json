{"metadata":{"title":"RawRepresentable Implementations","role":"collectionGroup","modules":[{"name":"MapboxDirections"}]},"identifier":{"url":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/DrivingSide\/RawRepresentable-Implementations","interfaceLanguage":"swift"},"kind":"article","sections":[],"hierarchy":{"paths":[["doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections","doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/DrivingSide"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/DrivingSide\/init(from:)"],"generated":true},{"identifiers":["doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/DrivingSide\/hashValue"],"generated":true,"title":"Instance Properties"},{"identifiers":["doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/DrivingSide\/encode(to:)","doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/DrivingSide\/hash(into:)"],"generated":true,"title":"Instance Methods"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.mapbox.navigation/documentation/MapboxDirections/DrivingSide":{"abstract":[{"type":"text","text":"A "},{"code":"DrivingSide","type":"codeVoice"},{"text":" indicates which side of the road cars and traffic flow.","type":"text"}],"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DrivingSide","kind":"identifier"}],"identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/DrivingSide","url":"\/documentation\/mapboxdirections\/drivingside","type":"topic","title":"DrivingSide","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DrivingSide"}]},"doc://com.mapbox.navigation/documentation/MapboxDirections":{"url":"\/documentation\/mapboxdirections","kind":"symbol","role":"collection","type":"topic","abstract":[{"text":"Quickly get driving, cycling, or walking directions, whether the trip is nonstop or it has multiple stops.","type":"text"}],"identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections","title":"MapboxDirections"},"doc://com.mapbox.navigation/documentation/MapboxDirections/DrivingSide/hashValue":{"abstract":[],"url":"\/documentation\/mapboxdirections\/drivingside\/hashvalue","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"hashValue","kind":"identifier"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/DrivingSide\/hashValue","title":"hashValue","type":"topic","kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://com.mapbox.navigation/documentation/MapboxDirections/DrivingSide/encode(to:)":{"url":"\/documentation\/mapboxdirections\/drivingside\/encode(to:)","abstract":[],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encode"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"text":"Encoder","kind":"typeIdentifier","preciseIdentifier":"s:s7EncoderP"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"title":"encode(to:)","identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/DrivingSide\/encode(to:)","kind":"symbol","type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RawValue"},{"text":" is ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://com.mapbox.navigation/documentation/MapboxDirections/DrivingSide/hash(into:)":{"abstract":[],"url":"\/documentation\/mapboxdirections\/drivingside\/hash(into:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hash"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"Hasher","kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/DrivingSide\/hash(into:)","title":"hash(into:)","type":"topic","kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RawValue"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://com.mapbox.navigation/documentation/MapboxDirections/DrivingSide/init(from:)":{"url":"\/documentation\/mapboxdirections\/drivingside\/init(from:)","abstract":[],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7DecoderP","text":"Decoder","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"title":"init(from:)","identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/DrivingSide\/init(from:)","kind":"symbol","type":"topic","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"RawValue","type":"codeVoice"},{"type":"text","text":" is "},{"code":"String","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}}}}