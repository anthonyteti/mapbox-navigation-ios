{"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"title":"RawRepresentable Implementations","modules":[{"name":"MapboxDirections"}],"role":"collectionGroup"},"sections":[],"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/SilentWaypoint\/CodingKeys\/RawRepresentable-Implementations"},"hierarchy":{"paths":[["doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections","doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/SilentWaypoint","doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/SilentWaypoint\/CodingKeys"]]},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/SilentWaypoint\/CodingKeys\/hashValue"],"generated":true},{"title":"Instance Methods","identifiers":["doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/SilentWaypoint\/CodingKeys\/hash(into:)"],"generated":true}],"references":{"doc://com.mapbox.navigation/documentation/MapboxDirections/SilentWaypoint":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SilentWaypoint","kind":"identifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/mapboxdirections\/silentwaypoint","identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/SilentWaypoint","title":"SilentWaypoint","type":"topic","abstract":[{"type":"text","text":"Represents a silent waypoint along the "},{"identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/RouteLeg","type":"reference","isActive":true},{"type":"text","text":"."}],"navigatorTitle":[{"text":"SilentWaypoint","kind":"identifier"}]},"doc://com.mapbox.navigation/documentation/MapboxDirections":{"role":"collection","kind":"symbol","url":"\/documentation\/mapboxdirections","abstract":[{"type":"text","text":"Quickly get driving, cycling, or walking directions, whether the trip is nonstop or it has multiple stops."}],"title":"MapboxDirections","identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections","type":"topic"},"doc://com.mapbox.navigation/documentation/MapboxDirections/SilentWaypoint/CodingKeys/hash(into:)":{"url":"\/documentation\/mapboxdirections\/silentwaypoint\/codingkeys\/hash(into:)","title":"hash(into:)","identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/SilentWaypoint\/CodingKeys\/hash(into:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Hasher","kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV"},{"text":")","kind":"text"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" and "},{"code":"RawValue","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}]},"kind":"symbol","type":"topic","abstract":[],"role":"symbol"},"doc://com.mapbox.navigation/documentation/MapboxDirections/SilentWaypoint/CodingKeys":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodingKeys"}],"role":"symbol","kind":"symbol","url":"\/documentation\/mapboxdirections\/silentwaypoint\/codingkeys","identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/SilentWaypoint\/CodingKeys","title":"SilentWaypoint.CodingKeys","type":"topic","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"CodingKeys"}]},"doc://com.mapbox.navigation/documentation/MapboxDirections/RouteLeg":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouteLeg"}],"navigatorTitle":[{"text":"RouteLeg","kind":"identifier"}],"url":"\/documentation\/mapboxdirections\/routeleg","abstract":[{"type":"text","text":"A "},{"identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/RouteLeg","type":"reference","isActive":true},{"type":"text","text":" object defines a single leg of a route between two waypoints. If the overall route has only two"},{"text":" ","type":"text"},{"text":"waypoints, it has a single ","type":"text"},{"identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/RouteLeg","type":"reference","isActive":true},{"type":"text","text":" object that covers the entire route. The route leg object includes"},{"text":" ","type":"text"},{"type":"text","text":"information about the leg, such as its name, distance, and expected travel time. Depending on the criteria used to"},{"type":"text","text":" "},{"text":"calculate the route, the route leg object may also include detailed turn-by-turn instructions.","type":"text"}],"title":"RouteLeg","identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/RouteLeg","type":"topic"},"doc://com.mapbox.navigation/documentation/MapboxDirections/SilentWaypoint/CodingKeys/hashValue":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashValue"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"url":"\/documentation\/mapboxdirections\/silentwaypoint\/codingkeys\/hashvalue","title":"hashValue","identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/SilentWaypoint\/CodingKeys\/hashValue","kind":"symbol","type":"topic","abstract":[],"role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RawValue"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}]}}}}