{"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"text":" ","kind":"text"},{"text":"mutating","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"insert","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"newMember"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s10SetAlgebraP7ElementQa","text":"Element"},{"kind":"text","text":", "},{"text":"comparisonPolicy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CustomOptionComparisonPolicy","identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/CustomOptionComparisonPolicy","preciseIdentifier":"s:16MapboxDirections28CustomOptionComparisonPolicyO","kind":"typeIdentifier"},{"kind":"text","text":") -> (inserted"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":", memberAfterInsert"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:s10SetAlgebraP7ElementQa"},{"kind":"text","text":")"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An element to insert into the set."}]}],"name":"newMember"},{"name":"comparisonPolicy","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"comparison method to be used for "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/CustomValueOptionSet\/customOptionsByRawValue"},{"type":"text","text":"."}]}]}]},{"kind":"content","content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"(true, newMember)"},{"type":"text","text":" if "},{"code":"newMember","type":"codeVoice"},{"text":" was not contained in the set. If an element equal to ","type":"text"},{"code":"newMember","type":"codeVoice"},{"type":"text","text":" "},{"text":"was already contained in the set, the method returns ","type":"text"},{"code":"(false, oldMember)","type":"codeVoice"},{"text":", where ","type":"text"},{"code":"oldMember","type":"codeVoice"},{"type":"text","text":" is the element that"},{"type":"text","text":" "},{"text":"was equal to ","type":"text"},{"code":"newMember","type":"codeVoice"},{"text":". In some cases, ","type":"text"},{"code":"oldMember","type":"codeVoice"},{"type":"text","text":" may be distinguishable from "},{"type":"codeVoice","code":"newMember"},{"type":"text","text":" by identity"},{"type":"text","text":" "},{"type":"text","text":"comparison or some other means."}],"type":"paragraph"}]},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"If an element equal to "},{"type":"codeVoice","code":"newMember"},{"type":"text","text":" is already contained in the set, this method has no effect. In this example,"},{"type":"text","text":" "},{"text":"a new element is inserted into ","type":"text"},{"code":"classDays","type":"codeVoice"},{"type":"text","text":", a set of days of the week. When an existing element is inserted, the"},{"type":"text","text":" "},{"type":"codeVoice","code":"classDays"},{"type":"text","text":" set does not change."}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["enum DayOfTheWeek: Int {","    case sunday, monday, tuesday, wednesday, thursday,","        friday, saturday","}","","var classDays: Set<DayOfTheWeek> = [.wednesday, .friday]","print(classDays.insert(.monday))","\/\/ Prints \"(true, .monday)\"","print(classDays)","\/\/ Prints \"[.friday, .wednesday, .monday]\"","","print(classDays.insert(.friday))","\/\/ Prints \"(false, .friday)\"","print(classDays)","\/\/ Prints \"[.friday, .wednesday, .monday]\""]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/CustomValueOptionSet\/insert(_:comparisonPolicy:)-98ngv"},"abstract":[{"text":"Inserts the given element in the set if it is not already present.","type":"text"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections","doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/CustomValueOptionSet","doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/CustomValueOptionSet\/insert(_:comparisonPolicy:)-1eg0x"]]},"sections":[],"metadata":{"externalID":"s:16MapboxDirections20CustomValueOptionSetPAAE6insert_16comparisonPolicySb8inserted_x17memberAfterInserttx_AA0ce10ComparisonI0OtF","title":"insert(_:comparisonPolicy:)","extendedModule":"MapboxDirections","role":"symbol","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"insert","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s10SetAlgebraP7ElementQa","text":"Element"},{"kind":"text","text":", "},{"kind":"externalParam","text":"comparisonPolicy"},{"kind":"text","text":": "},{"preciseIdentifier":"s:16MapboxDirections28CustomOptionComparisonPolicyO","text":"CustomOptionComparisonPolicy","kind":"typeIdentifier"},{"text":") -> (inserted","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", memberAfterInsert"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:s10SetAlgebraP7ElementQa"},{"text":")","kind":"text"}],"symbolKind":"method","modules":[{"name":"MapboxDirections"}]},"variants":[{"paths":["\/documentation\/mapboxdirections\/customvalueoptionset\/insert(_:comparisonpolicy:)-98ngv"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.mapbox.navigation/documentation/MapboxDirections":{"role":"collection","kind":"symbol","url":"\/documentation\/mapboxdirections","abstract":[{"type":"text","text":"Quickly get driving, cycling, or walking directions, whether the trip is nonstop or it has multiple stops."}],"title":"MapboxDirections","identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections","type":"topic"},"doc://com.mapbox.navigation/documentation/MapboxDirections/CustomValueOptionSet":{"url":"\/documentation\/mapboxdirections\/customvalueoptionset","abstract":[{"text":"Option set implementation which allows each option to have custom string value attached.","type":"text"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CustomValueOptionSet"}],"navigatorTitle":[{"text":"CustomValueOptionSet","kind":"identifier"}],"type":"topic","title":"CustomValueOptionSet","identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/CustomValueOptionSet","kind":"symbol"},"doc://com.mapbox.navigation/documentation/MapboxDirections/CustomValueOptionSet/insert(_:comparisonPolicy:)-98ngv":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"insert"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:s10SetAlgebraP7ElementQa","text":"Element"},{"kind":"text","text":", "},{"kind":"externalParam","text":"comparisonPolicy"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:16MapboxDirections28CustomOptionComparisonPolicyO","kind":"typeIdentifier","text":"CustomOptionComparisonPolicy"},{"kind":"text","text":") -> (inserted"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":", memberAfterInsert","kind":"text"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:s10SetAlgebraP7ElementQa","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"insert(_:comparisonPolicy:)","abstract":[{"text":"Inserts the given element in the set if it is not already present.","type":"text"}],"identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/CustomValueOptionSet\/insert(_:comparisonPolicy:)-98ngv","url":"\/documentation\/mapboxdirections\/customvalueoptionset\/insert(_:comparisonpolicy:)-98ngv","role":"symbol","kind":"symbol"},"doc://com.mapbox.navigation/documentation/MapboxDirections/CustomValueOptionSet/insert(_:comparisonPolicy:)-1eg0x":{"role":"symbol","identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/CustomValueOptionSet\/insert(_:comparisonPolicy:)-1eg0x","required":true,"type":"topic","title":"insert(_:comparisonPolicy:)","defaultImplementations":1,"abstract":[{"type":"text","text":"Inserts the given element in the set if it is not already present."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"insert","kind":"identifier"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s10SetAlgebraP7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"comparisonPolicy"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:16MapboxDirections28CustomOptionComparisonPolicyO","text":"CustomOptionComparisonPolicy"},{"kind":"text","text":") -> (inserted"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":", memberAfterInsert","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:s10SetAlgebraP7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":")","kind":"text"}],"url":"\/documentation\/mapboxdirections\/customvalueoptionset\/insert(_:comparisonpolicy:)-1eg0x"},"doc://com.mapbox.navigation/documentation/MapboxDirections/CustomValueOptionSet/customOptionsByRawValue":{"url":"\/documentation\/mapboxdirections\/customvalueoptionset\/customoptionsbyrawvalue","abstract":[{"type":"text","text":"Provides a text value description for user-provided options."}],"required":true,"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"customOptionsByRawValue","kind":"identifier"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SY8RawValueQa","text":"RawValue"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:16MapboxDirections20CustomValueOptionSetP0cD0Qa","text":"CustomValue","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"type":"topic","title":"customOptionsByRawValue","identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/CustomValueOptionSet\/customOptionsByRawValue","kind":"symbol"},"doc://com.mapbox.navigation/documentation/MapboxDirections/CustomOptionComparisonPolicy":{"role":"symbol","title":"CustomOptionComparisonPolicy","url":"\/documentation\/mapboxdirections\/customoptioncomparisonpolicy","abstract":[{"type":"text","text":"Describes how "},{"identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/CustomValueOptionSet\/customOptionsByRawValue","type":"reference","isActive":true},{"text":" component is compared during logical operations in","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/CustomValueOptionSet","isActive":true},{"type":"text","text":"."}],"navigatorTitle":[{"text":"CustomOptionComparisonPolicy","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/CustomOptionComparisonPolicy","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomOptionComparisonPolicy","kind":"identifier"}],"type":"topic"}}}