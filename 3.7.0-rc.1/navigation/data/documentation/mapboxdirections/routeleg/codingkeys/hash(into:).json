{"sections":[],"abstract":[{"type":"text","text":"Inherited from "},{"code":"RawRepresentable.hash(into:)","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections","doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/RouteLeg","doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/RouteLeg\/CodingKeys","doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/RouteLeg\/CodingKeys\/RawRepresentable-Implementations"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Hasher","preciseIdentifier":"s:s6HasherV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"symbolKind":"method","title":"hash(into:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"text":" and ","type":"text"},{"code":"RawValue","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"extendedModule":"Swift","modules":[{"name":"MapboxDirections","relatedModules":["Swift"]}],"role":"symbol","roleHeading":"Instance Method","externalID":"s:SYsSHRzSH8RawValueSYRpzrlE4hash4intoys6HasherVz_tF::SYNTHESIZED::s:16MapboxDirections8RouteLegV10CodingKeysO"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/RouteLeg\/CodingKeys\/hash(into:)"},"variants":[{"paths":["\/documentation\/mapboxdirections\/routeleg\/codingkeys\/hash(into:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"kind":"text","text":"("},{"text":"into","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"hasher","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"Hasher","preciseIdentifier":"s:s6HasherV","kind":"typeIdentifier"},{"text":")","kind":"text"}]}],"kind":"declarations"}],"references":{"doc://com.mapbox.navigation/documentation/MapboxDirections":{"type":"topic","identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections","kind":"symbol","title":"MapboxDirections","abstract":[{"text":"Quickly get driving, cycling, or walking directions, whether the trip is nonstop or it has multiple stops.","type":"text"}],"url":"\/documentation\/mapboxdirections","role":"collection"},"doc://com.mapbox.navigation/documentation/MapboxDirections/RouteLeg/CodingKeys":{"identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/RouteLeg\/CodingKeys","type":"topic","abstract":[],"kind":"symbol","title":"RouteLeg.CodingKeys","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"CodingKeys","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"CodingKeys","kind":"identifier"}],"url":"\/documentation\/mapboxdirections\/routeleg\/codingkeys"},"doc://com.mapbox.navigation/documentation/MapboxDirections/RouteLeg":{"type":"topic","identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/RouteLeg","kind":"symbol","title":"RouteLeg","abstract":[{"text":"A ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/RouteLeg"},{"type":"text","text":" object defines a single leg of a route between two waypoints. If the overall route has only two"},{"type":"text","text":" "},{"type":"text","text":"waypoints, it has a single "},{"identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/RouteLeg","type":"reference","isActive":true},{"type":"text","text":" object that covers the entire route. The route leg object includes"},{"text":" ","type":"text"},{"text":"information about the leg, such as its name, distance, and expected travel time. Depending on the criteria used to","type":"text"},{"type":"text","text":" "},{"text":"calculate the route, the route leg object may also include detailed turn-by-turn instructions.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"RouteLeg"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouteLeg","kind":"identifier"}],"url":"\/documentation\/mapboxdirections\/routeleg","role":"symbol"},"doc://com.mapbox.navigation/documentation/MapboxDirections/RouteLeg/CodingKeys/RawRepresentable-Implementations":{"kind":"article","url":"\/documentation\/mapboxdirections\/routeleg\/codingkeys\/rawrepresentable-implementations","abstract":[],"identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/RouteLeg\/CodingKeys\/RawRepresentable-Implementations","role":"collectionGroup","title":"RawRepresentable Implementations","type":"topic"},"doc://com.mapbox.navigation/documentation/MapboxDirections/RouteLeg/CodingKeys/hash(into:)":{"title":"hash(into:)","type":"topic","abstract":[],"url":"\/documentation\/mapboxdirections\/routeleg\/codingkeys\/hash(into:)","kind":"symbol","identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/RouteLeg\/CodingKeys\/hash(into:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Hasher","preciseIdentifier":"s:s6HasherV"},{"text":")","kind":"text"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"RawValue","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}]}}}}