{"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"RawRepresentable.hash(into:)"},{"type":"text","text":"."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"into"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"hasher"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV","text":"Hasher"},{"text":")","kind":"text"}]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mapboxdirections\/routeleg\/codingkeys\/hash(into:)"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections","doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/RouteLeg","doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/RouteLeg\/CodingKeys","doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/RouteLeg\/CodingKeys\/RawRepresentable-Implementations"]]},"identifier":{"url":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/RouteLeg\/CodingKeys\/hash(into:)","interfaceLanguage":"swift"},"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hash"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Hasher","kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV"},{"text":")","kind":"text"}],"role":"symbol","roleHeading":"Instance Method","modules":[{"name":"MapboxDirections","relatedModules":["Swift"]}],"symbolKind":"method","externalID":"s:SYsSHRzSH8RawValueSYRpzrlE4hash4intoys6HasherVz_tF::SYNTHESIZED::s:16MapboxDirections8RouteLegV10CodingKeysO","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}]},"title":"hash(into:)","extendedModule":"Swift"},"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://com.mapbox.navigation/documentation/MapboxDirections/RouteLeg/CodingKeys/RawRepresentable-Implementations":{"abstract":[],"identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/RouteLeg\/CodingKeys\/RawRepresentable-Implementations","title":"RawRepresentable Implementations","url":"\/documentation\/mapboxdirections\/routeleg\/codingkeys\/rawrepresentable-implementations","role":"collectionGroup","kind":"article","type":"topic"},"doc://com.mapbox.navigation/documentation/MapboxDirections/RouteLeg/CodingKeys":{"type":"topic","title":"RouteLeg.CodingKeys","role":"symbol","navigatorTitle":[{"text":"CodingKeys","kind":"identifier"}],"identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/RouteLeg\/CodingKeys","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"CodingKeys","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/mapboxdirections\/routeleg\/codingkeys","abstract":[]},"doc://com.mapbox.navigation/documentation/MapboxDirections":{"identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections","url":"\/documentation\/mapboxdirections","type":"topic","abstract":[{"text":"Quickly get driving, cycling, or walking directions, whether the trip is nonstop or it has multiple stops.","type":"text"}],"title":"MapboxDirections","kind":"symbol","role":"collection"},"doc://com.mapbox.navigation/documentation/MapboxDirections/RouteLeg":{"type":"topic","title":"RouteLeg","role":"symbol","navigatorTitle":[{"text":"RouteLeg","kind":"identifier"}],"identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/RouteLeg","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"RouteLeg","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/mapboxdirections\/routeleg","abstract":[{"type":"text","text":"A "},{"type":"reference","identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/RouteLeg","isActive":true},{"text":" object defines a single leg of a route between two waypoints. If the overall route has only two","type":"text"},{"type":"text","text":" "},{"text":"waypoints, it has a single ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/RouteLeg","isActive":true},{"type":"text","text":" object that covers the entire route. The route leg object includes"},{"type":"text","text":" "},{"type":"text","text":"information about the leg, such as its name, distance, and expected travel time. Depending on the criteria used to"},{"type":"text","text":" "},{"text":"calculate the route, the route leg object may also include detailed turn-by-turn instructions.","type":"text"}]},"doc://com.mapbox.navigation/documentation/MapboxDirections/RouteLeg/CodingKeys/hash(into:)":{"url":"\/documentation\/mapboxdirections\/routeleg\/codingkeys\/hash(into:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s6HasherV","kind":"typeIdentifier","text":"Hasher"},{"kind":"text","text":")"}],"abstract":[],"kind":"symbol","identifier":"doc:\/\/com.mapbox.navigation\/documentation\/MapboxDirections\/RouteLeg\/CodingKeys\/hash(into:)","role":"symbol","title":"hash(into:)","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" and "},{"code":"RawValue","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic"}}}